 name: Revanced Patcher
 on:
  workflow_dispatch:
    inputs:
      REVANCED_URL:
        description: 'Give URL Link to correct youtube apk'
        required: true
        default: ''
      PROJECT_URL: 
        description: 'Give releases link to revanced project jar file'
        required: true
        default: 'https://github.com/revanced/revanced-cli/releases/download/v2.21.2/revanced-cli-2.21.2-all.jar'
      PATCHES_URL:
        description: 'Give releases link to revanced-patches jar file'
        required: true
        default: 'https://github.com/revanced/revanced-patches/releases/download/v2.175.0-dev.2/revanced-patches-2.175.0-dev.2.jar'
 jobs:
    build:
       runs-on: ubuntu-latest
 permissions:
       content: write
       steps:
        - name: Display Run Parameters
          run: |
            echo "::group::User Environment Variables"
            echo "REVANCED_URL: ${{ github.event.inputs.REVANCED_URL }}"
            echo "PROJECT_URL: ${{ github.event.inputs.PROJECT_URL }}"
            echo "PROJECT_URL: ${{ github.event.inputs.PATCHES_URL }}"
        - name: Check Out
          uses: actions/checkout@v3
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
        - name: Cleanup
          uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps
        - name: Prepare the environment
          run: |
            sudo apt update
        - name: Get Repo for Revanced Patcher
          run: |
           mkdir ~/repo
           wget ${{ github.event.inputs.PROJECT_URL }} ~/repo
     #    git clone ${{ github.event.inputs.PROJECT_URL }} ~/repo
        - name: Get Patches for Revanced Patcher
          run: |
            mkdir ~/patches
            wget ${{ github.event.inputs.PATCHES_URL }} ~/patches
        - name: Get APK
          run: |
            mkdir ~/input
            wget ${{ github.event.inputs.REVANCED_URL }} ~/input
        - name: Run Patch Script
          run: |
           chmod +x ./.github/scripts/script.sh
           ./.github/scripts/script.sh

        - name: Upload to Release
          uses: xresloader/upload-to-github-release@v1
          with: 
           file: "~/output/*.apk"
           name: ${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          draft: true
          env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
